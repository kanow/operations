name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  php-lint:
    name: PHP linter
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Composer dependencies
        run: Build/Scripts/runTests.sh -p ${{ matrix.php-version }} -s composerUpdateMax
      - name: Lint PHP
        run: |
          Build/Scripts/runTests.sh -p ${{ matrix.php-version }} -s lintPhp
    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "8.1"
          - "8.2"
          - "8.3"
          - "8.4"
  code-quality:
    name: Code quality checks
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Composer dependencies
        run: Build/Scripts/runTests.sh -p ${{ matrix.php-version }} -t 13.4 -s composerUpdateMax
      - name: Run code quality checks
        run: |
          Build/Scripts/runTests.sh -p ${{ matrix.php-version }} -s composer ci:${{ matrix.command }}
    strategy:
      fail-fast: false
      matrix:
        command:
          - "composer:normalize"
          - "php:cs-fixer"
          - "php:stan"
        php-version:
          - "8.4"
  testsuite:
    name: "Testsuite"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: [ '8.2', '8.3', '8.4' ]
        minMax: [ 'composerUpdateMin', 'composerUpdateMax' ]
        coreVersion: [ '12.4', '13.4' ]
        db: ['mariadb', 'mysql', 'sqlite', 'postgres']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Composer
        run: Build/Scripts/runTests.sh -p ${{ matrix.php-version }} -s ${{ matrix.minMax }} -t ${{ matrix.coreVersion }}

      - name: Unit tests
        run: Build/Scripts/runTests.sh -p ${{ matrix.php-version }} -s unit

      - name: Functional tests with mariadb
        run: Build/Scripts/runTests.sh -p ${{ matrix.php-version }} -d ${{matrix.db}} -s functional
